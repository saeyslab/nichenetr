% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_popularity_bias.R
\name{get_slope_target_gene_popularity}
\alias{get_slope_target_gene_popularity}
\title{Regression analysis between target gene popularity and target gene predictive performance}
\usage{
get_slope_target_gene_popularity(metric,performances,method = "individual")
}
\arguments{
\item{metric}{The name of the performance metric of which the trend with the popularity of the target genes should be calculated.}

\item{performances}{A data.frame in which the performance measures for target gene predictions of ligands are denoted together with the popularity bin of the target genes for which predictions were evaluated (should contain at least following variables: target_bin_id and the metric of interest)}

\item{method}{'All': calculate slope by considering all datasets in settings. 'Individual': calculate slope for every dataset in settings separately to investigate dataset-specific popularity bias. Default: 'individual'.}
}
\value{
A data.frame in which the regression coefficient estimate, p-value and corresponding R-squared value are shown for the regression analysis to investigate the trend between a particular classficiation evaluation metric and the popularity of the target genes.
}
\description{
\code{get_slope_target_gene_popularity}: Performs regression analysis to investigate the trend between a particular classficiation evaluation metric and the popularity of target genes.
}
\examples{
\dontrun{
library(dplyr)
weighted_networks = construct_weighted_networks(lr_network, sig_network, gr_network, source_weights_df)
settings = lapply(expression_settings_validation[1:10],convert_expression_settings_evaluation)
ligands = extract_ligands_from_settings(settings)
ligand_target_matrix = construct_ligand_target_matrix(weighted_networks, lr_network, ligands)
# ncitations = get_ncitations_genes()
performances_target_bins_popularity = evaluate_target_prediction_per_bin(5,settings,ligand_target_matrix,ncitations)
slopes_auroc = get_slope_target_gene_popularity("auroc",performances_target_bins_popularity)
slopes_df = performances_target_bins_popularity \%>\% select(-setting,-ligand,-target_bin_id) \%>\% colnames() \%>\% lapply(.,get_slope_target_gene_popularity,performances_target_bins_popularity,method = "individual") \%>\% bind_rows()
slopes_df2 = performances_target_bins_popularity \%>\% select(-setting,-ligand,-target_bin_id) \%>\% colnames() \%>\% lapply(.,get_slope_target_gene_popularity,performances_target_bins_popularity,method = "all") \%>\% bind_rows()
}

}
